rule "Primo VE - Publisher"
#version 2023-2
# 23-4 added AND NOT (MARC."264"."a" match ".* :" OR MARC."264"."a" match ".* ;") to differentiate from rule Publisher 2
                when
                               MARC."264" has any "a" AND NOT
                               (MARC."264"."a" match ".* :" OR
                                MARC."264"."a" match ".* ;")
                then
                    set TEMP"1" to MARC."264" sub without sort "a,b" wrap subfields
                    replace wrapping delimiters (TEMP"1","a",""," : ")
                    replace wrapping delimiters (TEMP"1","b",""," ; ")
                    remove substring using regex (TEMP"1","(/|:|;|; |=|,)+$")
                    create pnx."display"."publisher" with TEMP"1"
end

rule "Primo VE - Publisher without a"
                when
                               MARC."264" has any "3,b"
                then
                    set TEMP"1" to MARC."264" subfields "3"
                    remove substring using regex (TEMP"1","(/|:|;|=|,)+$")
                    set TEMP"2" to MARC."264" subfields "b"
                    remove substring using regex (TEMP"2","(/|:|;|=|,)+$")
            concatenate with delimiter (TEMP"1",TEMP"2"," : ")
            create pnx."display"."publisher" with TEMP"1"
end

rule "Primo VE - Publisher 2"
# 23-4: if $a end with : take that as punctuation between $a and $b
# 23-4: added rule
                when
                               MARC."264" has any "a" AND
			       (MARC."264"."a" match ".* :" OR
                                MARC."264"."a" match ".* ;")
                then
                    set TEMP"1" to MARC."264" sub without sort "a,b" wrap subfields
                    replace wrapping delimiters (TEMP"1","a",""," ")
                    replace wrapping delimiters (TEMP"1","b",""," ; ")
                    remove substring using regex (TEMP"1","(/|:|;|; |=|,)+$")
                    create pnx."display"."publisher" with TEMP"1"
end

rule "Primo VE - Publisher-260"
	when
		MARC."260" has any "a,b,e,f"
	then
		set TEMP"1" to MARC."260" subfields "a"
		remove substring using regex (TEMP"1","(/|:|;|=|,)+$")
		set TEMP"2" to MARC."260" subfields "b"
		remove substring using regex (TEMP"2","(/|:|;|=|,)+$")
		concatenate with delimiter (TEMP"1",TEMP"2"," : ")
		set TEMP"3" to MARC."260" subfields "e"
		remove substring using regex (TEMP"3","(/|:|;|=|,)+$")
		set TEMP"4" to MARC."260" subfields "f"
		remove substring using regex (TEMP"4","(/|:|;|=|,)+$")
		concatenate with delimiter (TEMP"3",TEMP"4"," : ")
		concatenate with delimiter (TEMP"1",TEMP"3"," ")
		create pnx."display"."publisher" with TEMP"1"
end

rule "Primo VE - Publisher-notes 362"
	when
		MARC."362" has any "a,z" 
		then
	create pnx."display"."publisher_notes" with "N/A"
end

rule "Primo VE - Publisher-880-264"
	when
		MARC is "880" AND
		MARC."880"."6" match "264-.*"
	then
		 set TEMP"1" to MARC."880" sub without sort "a,b" wrap subfields
                    replace wrapping delimiters (TEMP"1","a",""," : ")
                    replace wrapping delimiters (TEMP"1","b",""," ; ")
                    remove substring using regex (TEMP"1","(/|:|;|; |=|,)+$")
		create pnx."display"."publisher" with TEMP"1"
end

rule "Primo VE - Publisher-880-260"
	when
		MARC is "880" AND
		MARC."880"."6" match "260-.*"
	then
		set TEMP"1" to MARC."880" subfields "a"
		remove substring using regex (TEMP"1","\\/|:|;|=|,|\\.|\\[|\\]|\\<|\\>")
		set TEMP"2" to MARC."880" subfields "b"
		remove substring using regex (TEMP"2","\\/|:|;|=|,|\\.|\\[|\\]|\\<|\\>")
		concatenate with delimiter (TEMP"1",TEMP"2"," : ")
		set TEMP"3" to MARC."880" subfields "e"
		remove substring using regex (TEMP"3","\\/|:|;|=|,|\\.|\\[|\\]|\\<|\\>")
		concatenate with delimiter (TEMP"1",TEMP"3"," ")
		set TEMP"4" to MARC."880" subfields "f"
		remove substring using regex (TEMP"4","\\/|:|;|=|,|\\.|\\[|\\]|\\<|\\>")
		concatenate with delimiter (TEMP"3",TEMP"4"," : ")
		create pnx."display"."publisher" with TEMP"1"
end